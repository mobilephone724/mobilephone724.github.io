<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hextra – cryptology</title>
    <link>https://mobilephone724.github.io/categories/cryptology/</link>
    <description>Recent content in cryptology on Hextra</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 14 Jan 2022 23:43:08 +0800</lastBuildDate>
    
	  <atom:link href="https://mobilephone724.github.io/categories/cryptology/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Alice and Bob how to know whose number is bigger without giving away their own&#39;s</title>
      <link>https://mobilephone724.github.io/miscellaneous/howtoknowwhoseisbigger/</link>
      <pubDate>Fri, 14 Jan 2022 23:43:08 +0800</pubDate>
      
      <guid>https://mobilephone724.github.io/miscellaneous/howtoknowwhoseisbigger/</guid>
      <description>
        
        
        &lt;h2&gt;Definiteness：&lt;span class=&#34;absolute -mt-20&#34; id=&#34;definiteness&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#definiteness&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Suppose Alice has number $i$ and Bob has number $j$ and $1\leq i,j \leq 9$. We need a protocol for them to decide whether $i &amp;lt; j$ in the end(aside from their own values)&lt;/p&gt;
&lt;h2&gt;Solution:&lt;span class=&#34;absolute -mt-20&#34; id=&#34;solution&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#solution&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Let $M$ be the set of all $N$-bit nonnegative integers&lt;/p&gt;
&lt;p&gt;Let $Q_N$ be the set of all one-one and onto function from $M$ to $M$&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Alice generates a public key from $Q_N$, called $E_a$, and the inverse function of $E_a$ is $D_a$&lt;/li&gt;
&lt;li&gt;Bob picks a random value $x \in M$, compute $k = E_a(x)$, then send $k - j$ to Alice&lt;/li&gt;
&lt;li&gt;Alice computes $y_u=D_a(k - j + u)$ for $u = 1,2,\dots,9$&lt;/li&gt;
&lt;li&gt;Alice generates a random prime $p$ of $N/2$-bit, and computes $z_u=y_u(\mod p)$ for all $u$.&lt;/li&gt;
&lt;li&gt;Alice repeats step 4 until all $z_u$ differ by at least 2 in the $\mod p$ sense&lt;/li&gt;
&lt;li&gt;Alice sends the $p$ and $z_1,z_2,\dots,z_i,z_{i+1}+1,\dots,z_{9} +1$ (all in $\mod p$ sense)to Bob&lt;/li&gt;
&lt;li&gt;Bob looks at the $j$-th value(not counting p) sent from Alice, and decides that $i\geq j$ if it is equal to $x \mod p$, or $i&amp;lt;j$ otherwise&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
